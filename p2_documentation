<div>
Kapselt HTML objekte. Diese lassen sich dadurch strukturiert platzieren

<ul> <li></li>
unsortierte Liste. Stellt liste unsortiert dar. punkte lassen sich durch list-style-type: none entfernen
li ist ein list element

id="anker"
gibt einem HTML objekt einen Spezifischen namen. Erleichter zugriff über CSS


<h1> Überschrifft
Text mit großer schriftart. Mehrere schriftgrößen möglich
<img> Bild
bindet ein Bild in den quelltext ein

Webseite Statisches HTML
Für jedes Produkt das angezeigt werden soll muss eine eigene HTML seite erzeugt werden.
Die 10 Produkte müssen manuell in die Produkte.html eingetragen werden. Zu jedem Produkt wird eine Detail Seite Erstellt


GET / POST Target ?
GET formulardaten werden an URL angehängt
POST Daten werden direkt übertragen

name ist der schlüssel um auf die Daten zuzugreifen

postdata.php ist nicht erreichbar. Ping auf IP funktioniert. Script nur über FH Netz erreichbar ?


 Color of FH Aachen
  #00b5ad

:hover

:active



Optionale Attribute und Primärschlüssel

Primärschlüssel wird als Primary key angegeben  => Sinnvol hier autoincrement als INCREMENT(1,1) # starte bei 1 und erhöhe ID um 1
Optionale attribute


Welche Relationen lassen sich ohne eigene Tabelle anlegen?
1:1 sowei 1:N beziehungen lassen sich ohne tabelle erzeugen.
Hier wird einfach ein Tabellen Attribut verwendet welches die ID aus der Verknüpften Tabelle Speichert
Welche nicht?

Bei N:M / N:N muss eine Tabelle erzeugt werden die den Fremdschlüssel und den Datensatz speichert

ID
F_ID
Value

Vorteile Nachteile
SQL Abfragen sind Simpler wenn keine Tabellen für relationen verwendet werden.
Dadurch kann die Datenbank schneller arbeiten.
Weniger overhead. Kleinere Datenbank.


SQL Syntax

1:1
Foreign_Key UNIQUE FOREIGN KEY REFERENCES TableName(Primary Key)

UNIQUE sorgt hier dafür, dass die ID nur einmal eingetragen werden kann
1:N
Foreign_Key FOREIGN KEY REFERENCES TableName(Primary Key)

Siehe 1:1 mit dem unterschied, dass hier kein UNIQUE verwendet wird und dadurch zugelassen wird,
dass ein Eintrag mehere IDs haben kann.

N:M

Create Table hatZutat
ID INT primary key identity(1,1) not null,
Produkt_ID int References Produkt(ID) not null,
ZUTAT_ID int references zutat(ID) not null,


Generalisierung für FE Benutzer ( Angehörige,Gäste... ) ist bereits angedeutet.
Was muss geändert werden um diese Beziehung abzudecken?
Jede der Tabellen muss eine referenz auf einen FE nutzer besitzen

Welche Vor/Nachteile hat diese abbildung
Jeder FE nutzer kann ein ein Status zugewiesen werden. Wird ein FE Nutzer gelöscht
werd automatisch auch die abhängigkeiten entfernt.

Wird jedoch ein Student gelöscht bleibt der FENutzer immer noch bestehen. Er verliert nur seinen Status Student.

Wie verhalten sich die Primärschlüssel der Subtypen
Sie Sind referenzen auf ihre Parent Tabellen.

Was bewirkt das Schlüsselwort GO in MSSQL
Signalisiert das Ende eines Batches von SQL Anweisungen für SQLSERVER Helper Tools


Constraints

Welche Constraints dienen in MSSQL welchem Zweck?
NOT NULL:
Inhalt des Attributs darf nicht leer sein

CHECK:
limitiert die Werte die in dem Attribut abgelegt werden können

UNIQUE:
Der Wert der in dieses Attribut eingetragen wird. Darf nicht bereits in dieser Tabelle vorhanden sein

PRIMARY KEY
Attribute mit dem constraint PRIMARY KEY identifizieren eine Spalte in der Tabelle. Dieser wert ist gleichzeitig UNIQUE

FOREIGN KEY
Referenziert auf einen PRIMARY KEY in einer anderen Tabelle
    PARAMETER: wenn eintrag gelöscht wird

    NO ACTION:
    Löschen führt zu fehler

    CASCADE
    Alle Spalten die abhängigkeiten aufweisen werden ebenfalls gelöscht

    SET NULL
    Bei Löschung wird wert auf NULL gesetzt

    SET DEFAULT
    Bei Löschung wird wert auf DEFAULT gesetzt
Anbindung über VS

Was muss getan werden um Datensätze hinzuzufügen?
Da FH Angehörige in relation zu FE Benutzer stehen und diese wiederum in relation zu BE Benutzer,
muss zu begin ein BE Benutzer angelegt werde.
Dieser BE user richtet dann die FE user an
Mithilfe der IDs der FE user können nun FH Angehörige angelegt werden.

Kaskadiertes Löschen

Wie müssen die Spezielisierten Tabellen abgeändert werden um Kaskadiertes Löschen zu unterstützen?
In den Tabellen Mitarbeiter und Student muss die FE NutzerID hinterlegt sein.
Und mithilfe von DELETE CASCADE muss der Student/Mitarbeiter entfernt werden wenn der FE-Nutzer gelöscht wird



Was geschieht wenn ein Student gelöscht wird?
Der FE-Nutzer mit der ID des Studenten verliert seinen Status Student
